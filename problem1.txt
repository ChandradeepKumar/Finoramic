

vector <vector <int> > v;

 void find(TreeNode* A,vector <int> k,int ??
 {
     if(!A)
     return ;
     if(!A->left&&!A->right&&A->val==B)
     {
         k.push_back(A->val);
         
         v.push_back(k);
       
         k.clear();
         return ;
     }
    
     B=B-A->val;
     k.push_back(A->val);
     find(A->left,k,B);
     find(A->right,k,B);
     return;
     
 }
vector<vector<int> > Solution::pathSum(TreeNode* A, int ?? {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    v.clear();
    vector <int> k;
    if(!A)
    {
        vector <vector <int> > l;
        v.clear();
        return l;
        
    }
    if(!A->left&&!A->right&&B==A->val)
    {
        vector<vector  <int> > l;
        vector <int> t;
        t.push_back(B);
        l.push_back(t);
        return l;
    }
    k.push_back(A->val);
    B=B-A->val;
    find(A->left,k,B);
    find(A->right,k,B);
    return v;
    
}